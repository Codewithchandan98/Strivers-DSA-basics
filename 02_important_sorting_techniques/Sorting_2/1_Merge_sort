def merge_sort(arr):
    # base case : 0 or 2 element is already sorted
    if len(arr) <= 1:
        return arr
    
    mid = len(arr)//2
    #divide
    left = merge_sort(arr[:mid])
    right = merge_sort(arr[mid:])
    #conquer(merge)
    return merge(left, right)


def merge(left, right):
    result = [] 
    i = j = 0

    #merge two sorted arrays
    while i < len(left) and j < len(right):
      if left[i] <= right [j]:
          result.append(left[i])
          i +=1

      else :
          result.append(right[j])
          j +=1


      #handle remaining elements
      result.extend(left[i:])
      result.extend(right[j:])
      return result

examples = [
    [38, 27, 43, 3, 9, 82, 10],
    [],
    [1],
    [5, 5, 5, 5],
    [9, 7, 5, 3, 1],
    [1, 2, 3, 4, 5],
]

for ex in examples:
    print(f"Original: {ex} â†’ Sorted: {merge_sort(ex)}")
